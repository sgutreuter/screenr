% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ntpp-methods.R
\name{ntpp.lasso_screenr}
\alias{ntpp.lasso_screenr}
\title{An S3 Method to Compute the Ratio of Total Tests to Positive Results}
\usage{
\method{ntpp}{lasso_screenr}(
  object,
  ...,
  model = c("minAIC", "minBIC"),
  type = c("cvResults", "isResults"),
  prev = NULL
)
}
\arguments{
\item{object}{a \code{lasso_screenr}-class object produced by \code{lasso_screenr}.}

\item{...}{optional arguments to \code{ntpp} methods.}

\item{model}{(character) select the model which produced the
minimum AIC (\verb{"minAIC"}, the default) or minimum BIC (\verb{"minBIC"}).}

\item{type}{(character) one of \verb{"cvResults"} (the default) or
\verb{"isResults"} to specify \emph{k}-fold cross-validated or in-sample
receiver-operating characteristics, respectively.}

\item{prev}{an optional positive proportion for the test outcome; if missing
the test positivity is obtained from \code{object}.}
}
\value{
\code{ntpp.lasso_screenr} returns a data frame containing the
following columns:
\describe{
\item{\verb{sensitivity}}{The sensitivity (proportion) of the screener.}
\item{\verb{specificity}}{The specificity (proportion) of the screener.}
\item{\verb{ntpp}}{the number of tests required to discover
a single positive test result.}
\item{\verb{prev_untested}}{The antipated proportion who would positive
among those who are screened out of testing.}
}
}
\description{
\code{ntpp.lasso_screenr} computes the ratio of the total number of
tests performed per positive test result and the anticipated proportion of the
untested (those screened out of testing) who would actually test positive.
}
\details{
The anticipated number of tests required to detect a single positive
\emph{nntp} is given by
\deqn{nntp = (SeP + (1 - Sp)(1 - P)) / SeP}
where \emph{Se} is sensitivity, \emph{P} is prevalence and \emph{Sp} is
specificity. The anticipated positivity among those screened out is given by
\deqn{Puntested = ((1 - Se)P) / ((1 - Se)P + Sp (1 - P))}
}
\examples{
attach(uniobj1)
ntpp(uniobj1)

}
